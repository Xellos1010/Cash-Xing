//
//
//  Generated by StarUML(tm) C# Add-In
//
//  @ Project : Slot Engine
//  @ File Name : Reel.cs
//  @ Date : 5/7/2014
//  @ Author : Evan McCall
//
//
using UnityEngine;
using System;
//TODO make conditional namespace - need to develop more
namespace BoomSports.Prototype
{
    [Serializable]
    public class TargetAnimatorsTriggerSetOnActive : TargetAnimatorGroupContainer
    {
        [SerializeField]
        public supportedAnimatorTriggers triggerToSetOnConditionalTrue;
        [SerializeField]
        public supportedAnimatorTriggers triggerToSetOnInitialize;

        public override void ActivateConditional()
        {
            throw new NotImplementedException();
        }

        public override void ActivateConditionalAtIndex(int indexToTrigger)
        {
            Debug.Log($"{targetAnimators[indexToTrigger].gameObject.name} set {triggerToSetOnConditionalTrue.ToString()} trigger");
            //Needs to be set beforehand
            targetAnimators[indexToTrigger].SetTrigger(triggerToSetOnConditionalTrue.ToString());
        }

        public override void ActivateConditionalWithNode(SuffixTreeNode node)
        {
            throw new NotImplementedException();
        }

        internal override void Initialize()
        {
            AnimatorStateInfo state_info;
            for (int i = 0; i < targetAnimators.Length; i++)
            {
                state_info = targetAnimators[i].GetCurrentAnimatorStateInfo(0);
                if (!state_info.IsName(triggerToSetOnInitialize.ToString()))
                {
                    Debug.Log($"{targetAnimators[i].gameObject.name} state name != {triggerToSetOnInitialize.ToString()}");
                    targetAnimators[i].SetTrigger(triggerToSetOnInitialize.ToString());
                }
            }
        }
    }
}
