//
//
//  Generated by StarUML(tm) C# Add-In
//
//  @ Project : Slot Engine
//  @ File Name : Reel.cs
//  @ Date : 5/7/2014
//  @ Author : Evan McCall
//
//
using UnityEngine;
using System;

namespace Slot_Engine.Matrix
{
    [Serializable]
    public abstract class BaseSlotActivatorEventConditional
    {
        /// <summary>
        /// Container for holding targets of conditional active
        /// </summary>
        [SerializeField]
        public TargetConditionalActiveContainer targetConditionalContainer;
        /// <summary>
        /// Base evaluation call for ObjectGroupManagers to perform and process as needed
        /// </summary>
        /// <param name="objectToEvaluate"></param>
        /// <returns></returns>
        [SerializeField]
        public abstract bool EvaluateCondition(BaseObjectManager objectToEvaluate);
    }
    /// <summary>
    /// Container for Target Conditional Reference
    /// </summary>
    [Serializable]
    public class TargetConditionalActiveContainer
    {
        /// <summary>
        /// Who should be the target - Refactor to make scriptable objects later - this is cash crossing specific
        /// </summary>
        [SerializeField]
        public TargetAnimatorTriggerSetOnActive[] targetsForConditionalTrue;
    }
    [Serializable]
    public class TargetAnimatorTriggerSetOnActive : TargetAnimatorGroupContainer
    {
        [SerializeField]
        public supportedAnimatorTriggers triggerToSet;

        public override void ActivateConditionalAtIndex(int indexToTrigger)
        {
            Debug.Log($"{targetAnimators[indexToTrigger].gameObject.name} set {triggerToSet.ToString()} trigger");
            //Needs to be set beforehand
            targetAnimators[indexToTrigger].SetTrigger(triggerToSet.ToString());
        }
    }

    /// <summary>
    /// Base class for assigning animator target for conditional active
    /// </summary>
    [Serializable]
    public abstract class TargetAnimatorGroupContainer : BaseTargetGroupContainer
    {
        /// <summary>
        /// The target animator for event to invoke
        /// </summary>
        [SerializeField]
        public Animator[] targetAnimators;
    }
    ///// <summary>
    ///// Base class for assigning animator target for conditional active
    ///// </summary>
    //[Serializable]
    //public abstract class TargetAnimatorContainer : BaseTargetGroupContainer
    //{
    //    /// <summary>
    //    /// The target animator for event to invoke
    //    /// </summary>
    //    [SerializeField]
    //    public Animator targetAnimator;
    //}
    /// <summary>
    /// Used to hold reference for future implementation of scriptable objects
    /// </summary>
    [Serializable]
    public abstract class BaseTargetGroupContainer
    {
        public abstract void ActivateConditionalAtIndex(int index);
    }
}
